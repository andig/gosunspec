{{define "point"}}{{.Name}} {{.Type|goType}} `sunspec:"offset={{.Offset}}{{if ne .Length 0}},len={{.Length}}{{end}}{{if ne .ScaleFactor ""}},sf={{.ScaleFactor}}{{end}},access={{if eq .Access ""}}r{{else}}{{toLower .Access}}{{end}}"`{{end}}

{{define "points"}}
	Points: []smdx.PointElement{ {{range .}}
		{Id: {{.Name|title}},Offset: {{.Offset}},Type: typelabel.{{.Type|title}}{{if ne .ScaleFactor ""}},ScaleFactor:"{{.ScaleFactor}}"{{end}}{{optF "Units" .Units}},Access:{{if eq .Access ""}}"r"{{else}}"{{toLower .Access}}"{{end}}{{if gt .Length 0}},Length: {{.Length}}{{end}}{{if eq .Mandatory "M"}},Mandatory: true{{end}},{{if .Label}}Label: "{{.Label}}", Description: "{{quote .Description}}",{{end}}}, {{end}}
	},
{{end}}

{{define "model"}}

// Block{{.Id}} - {{.Group.Label}} - {{.Group.Description}}

const (
	ModelID = {{.Id}}
	ModelLabel = "{{.Group.Label}}"
	ModelDescription = "{{.Group.Description}}"
)

const (
{{range (uniqueNames .Group)}}   {{.|title}} = "{{.}}"
{{end}}
)

{{- if gt (len .Group.Groups) 0 }}
type Block{{.Group.Id}}Repeat struct {
{{range (index .Group.Groups 0).Points}}    {{template "point" .}}
{{end}}
}
{{- end}}

type Block{{.Id}} struct {
{{range (filteredPoints .Group.Points)}}    {{template "point" .}}
{{end}}
{{$groupId := .Group.Id}}
{{range (.Group.Groups)}}
  Repeats []Block{{$groupId}}Repeat
{{end}}
}

func (block *Block{{.Id}}) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
	Id: ModelID,
	Name: "{{.Group.Name}}",
	Length: {{.Length}},
	Blocks: []smdx.BlockElement{
			{{- if gt (len (filteredPoints .Group.Points)) 0}}
			{
				Length: {{.Group.Length}}, {{template "points" (filteredPoints .Group.Points)}}
			},{{end}}
			{{range .Group.Groups -}}
			{ {{if gt (len .Name) 0 }}Name: "{{.Name}}",{{end}}
				Length: {{.Length}}, 
				Type: "repeating", {{template "points" .Points}}
			}, {{end}}
	}})
}
{{end}}
package model{{.Model.Id}}

// Code generated by ../../generators/models.go. DO NOT EDIT.
// You can regenerate it by running 'go generate ./models' from the directory above.

import (
	"github.com/andig/gosunspec"
	"github.com/andig/gosunspec/smdx"
	"github.com/andig/gosunspec/typelabel"
)
{{template "model" .Model}}