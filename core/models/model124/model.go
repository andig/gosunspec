// NOTICE
// This file was automatically generated by ../../../generators/core.go. Do not edit it!
// You can regenerate it by running 'go generate ./core' from the directory above.

package model124

import (
	"github.com/crabmusket/gosunspec/core"
	"github.com/crabmusket/gosunspec/smdx"
)

// Block124 - Storage - Basic Storage Controls

const (
	ModelID = 124
)

const (
	ChaGriSet         = "ChaGriSet"
	ChaSt             = "ChaSt"
	ChaState          = "ChaState"
	ChaState_SF       = "ChaState_SF"
	InBatV            = "InBatV"
	InBatV_SF         = "InBatV_SF"
	InOutWRte_RmpTms  = "InOutWRte_RmpTms"
	InOutWRte_RvrtTms = "InOutWRte_RvrtTms"
	InOutWRte_SF      = "InOutWRte_SF"
	InOutWRte_WinTms  = "InOutWRte_WinTms"
	InWRte            = "InWRte"
	MinRsvPct         = "MinRsvPct"
	MinRsvPct_SF      = "MinRsvPct_SF"
	OutWRte           = "OutWRte"
	StorAval          = "StorAval"
	StorAval_SF       = "StorAval_SF"
	StorCtl_Mod       = "StorCtl_Mod"
	VAChaMax          = "VAChaMax"
	VAChaMax_SF       = "VAChaMax_SF"
	WChaDisChaGra_SF  = "WChaDisChaGra_SF"
	WChaGra           = "WChaGra"
	WChaMax           = "WChaMax"
	WChaMax_SF        = "WChaMax_SF"
	WDisChaGra        = "WDisChaGra"
)

type Block124 struct {
	WChaMax           uint16           `sunspec:"offset=0,len=1,sf=WChaMax_SF,access=rw"`
	WChaGra           uint16           `sunspec:"offset=1,len=1,sf=WChaDisChaGra_SF,access=rw"`
	WDisChaGra        uint16           `sunspec:"offset=2,len=1,sf=WChaDisChaGra_SF,access=rw"`
	StorCtl_Mod       core.Bitfield16  `sunspec:"offset=3,len=1,access=rw"`
	VAChaMax          uint16           `sunspec:"offset=4,len=1,sf=VAChaMax_SF,access=rw"`
	MinRsvPct         uint16           `sunspec:"offset=5,len=1,sf=MinRsvPct_SF,access=rw"`
	ChaState          uint16           `sunspec:"offset=6,len=1,sf=ChaState_SF,access=r"`
	StorAval          uint16           `sunspec:"offset=7,len=1,sf=StorAval_SF,access=r"`
	InBatV            uint16           `sunspec:"offset=8,len=1,sf=InBatV_SF,access=r"`
	ChaSt             core.Enum16      `sunspec:"offset=9,len=1,access=r"`
	OutWRte           int16            `sunspec:"offset=10,len=1,sf=InOutWRte_SF,access=rw"`
	InWRte            int16            `sunspec:"offset=11,len=1,sf=InOutWRte_SF,access=rw"`
	InOutWRte_WinTms  uint16           `sunspec:"offset=12,len=1,access=rw"`
	InOutWRte_RvrtTms uint16           `sunspec:"offset=13,len=1,access=rw"`
	InOutWRte_RmpTms  uint16           `sunspec:"offset=14,len=1,access=rw"`
	ChaGriSet         core.Enum16      `sunspec:"offset=15,len=1,access=rw"`
	WChaMax_SF        core.ScaleFactor `sunspec:"offset=16,len=1,access=r"`
	WChaDisChaGra_SF  core.ScaleFactor `sunspec:"offset=17,len=1,access=r"`
	VAChaMax_SF       core.ScaleFactor `sunspec:"offset=18,len=1,access=r"`
	MinRsvPct_SF      core.ScaleFactor `sunspec:"offset=19,len=1,access=r"`
	ChaState_SF       core.ScaleFactor `sunspec:"offset=20,len=1,access=r"`
	StorAval_SF       core.ScaleFactor `sunspec:"offset=21,len=1,access=r"`
	InBatV_SF         core.ScaleFactor `sunspec:"offset=22,len=1,access=r"`
	InOutWRte_SF      core.ScaleFactor `sunspec:"offset=23,len=1,access=r"`
}

func (self *Block124) GetId() core.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "storage",
		Length: 24,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 24,
				Type:   "fixed",
				Points: []smdx.PointElement{
					smdx.PointElement{Id: WChaMax, Offset: 0, Type: "uint16", ScaleFactor: "WChaMax_SF", Units: "W", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: WChaGra, Offset: 1, Type: "uint16", ScaleFactor: "WChaDisChaGra_SF", Units: "% WChaMax/sec", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: WDisChaGra, Offset: 2, Type: "uint16", ScaleFactor: "WChaDisChaGra_SF", Units: "% WChaMax/sec", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: StorCtl_Mod, Offset: 3, Type: "bitfield16", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: VAChaMax, Offset: 4, Type: "uint16", ScaleFactor: "VAChaMax_SF", Units: "VA", Access: "rw", Length: 1},
					smdx.PointElement{Id: MinRsvPct, Offset: 5, Type: "uint16", ScaleFactor: "MinRsvPct_SF", Units: "% WChaMax", Access: "rw", Length: 1},
					smdx.PointElement{Id: ChaState, Offset: 6, Type: "uint16", ScaleFactor: "ChaState_SF", Units: "% AhrRtg", Access: "r", Length: 1},
					smdx.PointElement{Id: StorAval, Offset: 7, Type: "uint16", ScaleFactor: "StorAval_SF", Units: "AH", Access: "r", Length: 1},
					smdx.PointElement{Id: InBatV, Offset: 8, Type: "uint16", ScaleFactor: "InBatV_SF", Units: "V", Access: "r", Length: 1},
					smdx.PointElement{Id: ChaSt, Offset: 9, Type: "enum16", Access: "r", Length: 1},
					smdx.PointElement{Id: OutWRte, Offset: 10, Type: "int16", ScaleFactor: "InOutWRte_SF", Units: "% WDisChaMax", Access: "rw", Length: 1},
					smdx.PointElement{Id: InWRte, Offset: 11, Type: "int16", ScaleFactor: "InOutWRte_SF", Units: " % WChaMax", Access: "rw", Length: 1},
					smdx.PointElement{Id: InOutWRte_WinTms, Offset: 12, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: InOutWRte_RvrtTms, Offset: 13, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: InOutWRte_RmpTms, Offset: 14, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: ChaGriSet, Offset: 15, Type: "enum16", Access: "rw", Length: 1},
					smdx.PointElement{Id: WChaMax_SF, Offset: 16, Type: "sunssf", Access: "r", Length: 1, Mandatory: true},
					smdx.PointElement{Id: WChaDisChaGra_SF, Offset: 17, Type: "sunssf", Access: "r", Length: 1, Mandatory: true},
					smdx.PointElement{Id: VAChaMax_SF, Offset: 18, Type: "sunssf", Access: "r", Length: 1},
					smdx.PointElement{Id: MinRsvPct_SF, Offset: 19, Type: "sunssf", Access: "r", Length: 1},
					smdx.PointElement{Id: ChaState_SF, Offset: 20, Type: "sunssf", Access: "r", Length: 1},
					smdx.PointElement{Id: StorAval_SF, Offset: 21, Type: "sunssf", Access: "r", Length: 1},
					smdx.PointElement{Id: InBatV_SF, Offset: 22, Type: "sunssf", Access: "r", Length: 1},
					smdx.PointElement{Id: InOutWRte_SF, Offset: 23, Type: "sunssf", Access: "r", Length: 1},
				},
			},
		}})
}
