// NOTICE
// This file was automatically generated by ../../../generators/core.go. Do not edit it!
// You can regenerate it by running 'go generate ./core' from the directory above.

package model64020

import (
	"github.com/crabmusket/gosunspec/core"
	"github.com/crabmusket/gosunspec/smdx"
)

// Block64020 - Mersen GreenString -

const (
	ModelID = 64020
)

const (
	Aux0Tmp           = "Aux0Tmp"
	Aux1Tmp           = "Aux1Tmp"
	Aux2Tmp           = "Aux2Tmp"
	Aux3Tmp           = "Aux3Tmp"
	Aux4Tmp           = "Aux4Tmp"
	Firmware          = "Firmware"
	Hardware          = "Hardware"
	MainTmp           = "MainTmp"
	ProbeTmp          = "ProbeTmp"
	Relay1            = "Relay1"
	Relay2            = "Relay2"
	Relay3            = "Relay3"
	Reset             = "Reset"
	ResetAccumulators = "ResetAccumulators"
	Sensor1Current    = "Sensor1Current"
	Sensor1Voltage    = "Sensor1Voltage"
	Sensor2Current    = "Sensor2Current"
	Sensor2Voltage    = "Sensor2Voltage"
	Sensor3Current    = "Sensor3Current"
	Sensor3Voltage    = "Sensor3Voltage"
	Sensor4Current    = "Sensor4Current"
	Sensor4Voltage    = "Sensor4Voltage"
	Sensor5Current    = "Sensor5Current"
	Sensor5Voltage    = "Sensor5Voltage"
	Sensor6Current    = "Sensor6Current"
	Sensor6Voltage    = "Sensor6Voltage"
	Sensor7Current    = "Sensor7Current"
	Sensor7Voltage    = "Sensor7Voltage"
	Sensor8           = "Sensor8"
	SensorA_SF        = "SensorA_SF"
	SensorHz_SF       = "SensorHz_SF"
	SensorV_SF        = "SensorV_SF"
	SerialNumber      = "SerialNumber"
)

type Block64020Repeat struct {
	SerialNumber core.String `sunspec:"offset=0,len=9"`
	Firmware     core.String `sunspec:"offset=9,len=6"`
	Hardware     uint16      `sunspec:"offset=15"`
}

type Block64020 struct {
	Aux0Tmp           int16            `sunspec:"offset=0"`
	Aux1Tmp           int16            `sunspec:"offset=1"`
	Aux2Tmp           int16            `sunspec:"offset=2"`
	Aux3Tmp           int16            `sunspec:"offset=3"`
	Aux4Tmp           int16            `sunspec:"offset=4"`
	ProbeTmp          int16            `sunspec:"offset=6"`
	MainTmp           int16            `sunspec:"offset=5"`
	SensorV_SF        core.ScaleFactor `sunspec:"offset=7"`
	SensorA_SF        core.ScaleFactor `sunspec:"offset=8"`
	SensorHz_SF       core.ScaleFactor `sunspec:"offset=9"`
	Sensor1Voltage    int16            `sunspec:"offset=10,sf=SensorV_SF"`
	Sensor2Voltage    int16            `sunspec:"offset=11,sf=SensorV_SF"`
	Sensor3Voltage    int16            `sunspec:"offset=12,sf=SensorV_SF"`
	Sensor4Voltage    int16            `sunspec:"offset=13,sf=SensorV_SF"`
	Sensor5Voltage    int16            `sunspec:"offset=14,sf=SensorV_SF"`
	Sensor6Voltage    int16            `sunspec:"offset=15,sf=SensorV_SF"`
	Sensor7Voltage    int16            `sunspec:"offset=16,sf=SensorV_SF"`
	Sensor1Current    int16            `sunspec:"offset=17,sf=SensorA_SF"`
	Sensor2Current    int16            `sunspec:"offset=18,sf=SensorA_SF"`
	Sensor3Current    int16            `sunspec:"offset=19,sf=SensorA_SF"`
	Sensor4Current    int16            `sunspec:"offset=20,sf=SensorA_SF"`
	Sensor5Current    int16            `sunspec:"offset=21,sf=SensorA_SF"`
	Sensor6Current    int16            `sunspec:"offset=22,sf=SensorA_SF"`
	Sensor7Current    int16            `sunspec:"offset=23,sf=SensorA_SF"`
	Sensor8           uint16           `sunspec:"offset=24,sf=SensorHz_SF"`
	Relay1            uint16           `sunspec:"offset=25"`
	Relay2            uint16           `sunspec:"offset=26"`
	Relay3            uint16           `sunspec:"offset=27"`
	ResetAccumulators uint16           `sunspec:"offset=28"`
	Reset             uint16           `sunspec:"offset=29"`

	Repeats []Block64020Repeat
}

func (self *Block64020) GetId() core.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "",
		Length: 46,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 30,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: Aux0Tmp, Offset: 0, Type: "int16", Units: "C"},
					smdx.PointElement{Id: Aux1Tmp, Offset: 1, Type: "int16", Units: "C"},
					smdx.PointElement{Id: Aux2Tmp, Offset: 2, Type: "int16", Units: "C"},
					smdx.PointElement{Id: Aux3Tmp, Offset: 3, Type: "int16", Units: "C"},
					smdx.PointElement{Id: Aux4Tmp, Offset: 4, Type: "int16", Units: "C"},
					smdx.PointElement{Id: ProbeTmp, Offset: 6, Type: "int16", Units: "C", Mandatory: true},
					smdx.PointElement{Id: MainTmp, Offset: 5, Type: "int16", Units: "C", Mandatory: true},
					smdx.PointElement{Id: SensorV_SF, Offset: 7, Type: "sunssf", Mandatory: true},
					smdx.PointElement{Id: SensorA_SF, Offset: 8, Type: "sunssf", Mandatory: true},
					smdx.PointElement{Id: SensorHz_SF, Offset: 9, Type: "sunssf", Mandatory: true},
					smdx.PointElement{Id: Sensor1Voltage, Offset: 10, Type: "int16", ScaleFactor: "SensorV_SF", Units: "V"},
					smdx.PointElement{Id: Sensor2Voltage, Offset: 11, Type: "int16", ScaleFactor: "SensorV_SF", Units: "V"},
					smdx.PointElement{Id: Sensor3Voltage, Offset: 12, Type: "int16", ScaleFactor: "SensorV_SF", Units: "V"},
					smdx.PointElement{Id: Sensor4Voltage, Offset: 13, Type: "int16", ScaleFactor: "SensorV_SF", Units: "V"},
					smdx.PointElement{Id: Sensor5Voltage, Offset: 14, Type: "int16", ScaleFactor: "SensorV_SF", Units: "V"},
					smdx.PointElement{Id: Sensor6Voltage, Offset: 15, Type: "int16", ScaleFactor: "SensorV_SF", Units: "V"},
					smdx.PointElement{Id: Sensor7Voltage, Offset: 16, Type: "int16", ScaleFactor: "SensorV_SF", Units: "V"},
					smdx.PointElement{Id: Sensor1Current, Offset: 17, Type: "int16", ScaleFactor: "SensorA_SF", Units: "A"},
					smdx.PointElement{Id: Sensor2Current, Offset: 18, Type: "int16", ScaleFactor: "SensorA_SF", Units: "A"},
					smdx.PointElement{Id: Sensor3Current, Offset: 19, Type: "int16", ScaleFactor: "SensorA_SF", Units: "A"},
					smdx.PointElement{Id: Sensor4Current, Offset: 20, Type: "int16", ScaleFactor: "SensorA_SF", Units: "A"},
					smdx.PointElement{Id: Sensor5Current, Offset: 21, Type: "int16", ScaleFactor: "SensorA_SF", Units: "A"},
					smdx.PointElement{Id: Sensor6Current, Offset: 22, Type: "int16", ScaleFactor: "SensorA_SF", Units: "A"},
					smdx.PointElement{Id: Sensor7Current, Offset: 23, Type: "int16", ScaleFactor: "SensorA_SF", Units: "A"},
					smdx.PointElement{Id: Sensor8, Offset: 24, Type: "uint16", ScaleFactor: "SensorHz_SF", Units: "Hz"},
					smdx.PointElement{Id: Relay1, Offset: 25, Type: "uint16"},
					smdx.PointElement{Id: Relay2, Offset: 26, Type: "uint16"},
					smdx.PointElement{Id: Relay3, Offset: 27, Type: "uint16"},
					smdx.PointElement{Id: ResetAccumulators, Offset: 28, Type: "uint16"},
					smdx.PointElement{Id: Reset, Offset: 29, Type: "uint16"},
				},
			},
			smdx.BlockElement{
				Length: 16,
				Type:   "repeating",
				Points: []smdx.PointElement{
					smdx.PointElement{Id: SerialNumber, Offset: 0, Type: "string", Length: 9, Mandatory: true},
					smdx.PointElement{Id: Firmware, Offset: 9, Type: "string", Length: 6, Mandatory: true},
					smdx.PointElement{Id: Hardware, Offset: 15, Type: "uint16", Mandatory: true},
				},
			},
		}})
}
