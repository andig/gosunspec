// NOTICE
// This file was automatically generated by ../../../generators/core.go. Do not edit it!
// You can regenerate it by running 'go generate ./core' from the directory above.

package model125

import (
	"github.com/crabmusket/gosunspec/core"
	"github.com/crabmusket/gosunspec/smdx"
)

// Block125 - Pricing - Pricing Signal

const (
	ModelID = 125
)

const (
	ModEna  = "ModEna"
	Pad     = "Pad"
	RmpTms  = "RmpTms"
	RvtTms  = "RvtTms"
	Sig     = "Sig"
	SigType = "SigType"
	Sig_SF  = "Sig_SF"
	WinTms  = "WinTms"
)

type Block125 struct {
	ModEna  core.Bitfield16  `sunspec:"offset=0,len=1,access=rw"`
	SigType core.Enum16      `sunspec:"offset=1,len=1,sf= ,access=rw"`
	Sig     int16            `sunspec:"offset=2,len=1,sf=Sig_SF,access=rw"`
	WinTms  uint16           `sunspec:"offset=3,len=1,access=rw"`
	RvtTms  uint16           `sunspec:"offset=4,len=1,access=rw"`
	RmpTms  uint16           `sunspec:"offset=5,len=1,access=rw"`
	Sig_SF  core.ScaleFactor `sunspec:"offset=6,len=1,sf= ,access=r"`
	Pad     core.Pad         `sunspec:"offset=7,len=1,access=r"`
}

func (self *Block125) GetId() core.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "pricing",
		Length: 8,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 8,
				Type:   "fixed",
				Points: []smdx.PointElement{
					smdx.PointElement{Id: ModEna, Offset: 0, Type: "bitfield16", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: SigType, Offset: 1, Type: "enum16", ScaleFactor: " ", Access: "rw", Length: 1},
					smdx.PointElement{Id: Sig, Offset: 2, Type: "int16", ScaleFactor: "Sig_SF", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: WinTms, Offset: 3, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: RvtTms, Offset: 4, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: RmpTms, Offset: 5, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: Sig_SF, Offset: 6, Type: "sunssf", ScaleFactor: " ", Access: "r", Length: 1, Mandatory: true},
					smdx.PointElement{Id: Pad, Offset: 7, Type: "pad", Access: "r", Length: 1},
				},
			},
		}})
}
