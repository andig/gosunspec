// NOTICE
// This file was automatically generated by ../../../generators/core.go. Do not edit it!
// You can regenerate it by running 'go generate ./core' from the directory above.

package model123

import (
	"github.com/crabmusket/gosunspec/core"
	"github.com/crabmusket/gosunspec/smdx"
)

// Block123 - Immediate Controls - Immediate Inverter Controls

const (
	ModelID = 123
)

const (
	Conn               = "Conn"
	Conn_RvrtTms       = "Conn_RvrtTms"
	Conn_WinTms        = "Conn_WinTms"
	OutPFSet           = "OutPFSet"
	OutPFSet_Ena       = "OutPFSet_Ena"
	OutPFSet_RmpTms    = "OutPFSet_RmpTms"
	OutPFSet_RvrtTms   = "OutPFSet_RvrtTms"
	OutPFSet_SF        = "OutPFSet_SF"
	OutPFSet_WinTms    = "OutPFSet_WinTms"
	VArAvalPct         = "VArAvalPct"
	VArMaxPct          = "VArMaxPct"
	VArPct_Ena         = "VArPct_Ena"
	VArPct_Mod         = "VArPct_Mod"
	VArPct_RmpTms      = "VArPct_RmpTms"
	VArPct_RvrtTms     = "VArPct_RvrtTms"
	VArPct_SF          = "VArPct_SF"
	VArPct_WinTms      = "VArPct_WinTms"
	VArWMaxPct         = "VArWMaxPct"
	WMaxLimPct         = "WMaxLimPct"
	WMaxLimPct_RmpTms  = "WMaxLimPct_RmpTms"
	WMaxLimPct_RvrtTms = "WMaxLimPct_RvrtTms"
	WMaxLimPct_SF      = "WMaxLimPct_SF"
	WMaxLimPct_WinTms  = "WMaxLimPct_WinTms"
	WMaxLim_Ena        = "WMaxLim_Ena"
)

type Block123 struct {
	Conn_WinTms        uint16           `sunspec:"offset=0,len=1,access=rw"`
	Conn_RvrtTms       uint16           `sunspec:"offset=1,len=1,access=rw"`
	Conn               core.Enum16      `sunspec:"offset=2,len=1,access=rw"`
	WMaxLimPct         uint16           `sunspec:"offset=3,len=1,sf=WMaxLimPct_SF,access=rw"`
	WMaxLimPct_WinTms  uint16           `sunspec:"offset=4,len=1,access=rw"`
	WMaxLimPct_RvrtTms uint16           `sunspec:"offset=5,len=1,access=rw"`
	WMaxLimPct_RmpTms  uint16           `sunspec:"offset=6,len=1,access=rw"`
	WMaxLim_Ena        core.Enum16      `sunspec:"offset=7,len=1,access=rw"`
	OutPFSet           int16            `sunspec:"offset=8,len=1,sf=OutPFSet_SF,access=rw"`
	OutPFSet_WinTms    uint16           `sunspec:"offset=9,len=1,access=rw"`
	OutPFSet_RvrtTms   uint16           `sunspec:"offset=10,len=1,access=rw"`
	OutPFSet_RmpTms    uint16           `sunspec:"offset=11,len=1,access=rw"`
	OutPFSet_Ena       core.Enum16      `sunspec:"offset=12,len=1,access=rw"`
	VArWMaxPct         int16            `sunspec:"offset=13,len=1,sf=VArPct_SF,access=rw"`
	VArMaxPct          int16            `sunspec:"offset=14,len=1,sf=VArPct_SF,access=rw"`
	VArAvalPct         int16            `sunspec:"offset=15,len=1,sf=VArPct_SF,access=rw"`
	VArPct_WinTms      uint16           `sunspec:"offset=16,len=1,access=rw"`
	VArPct_RvrtTms     uint16           `sunspec:"offset=17,len=1,access=rw"`
	VArPct_RmpTms      uint16           `sunspec:"offset=18,len=1,access=rw"`
	VArPct_Mod         core.Enum16      `sunspec:"offset=19,len=1,access=rw"`
	VArPct_Ena         core.Enum16      `sunspec:"offset=20,len=1,access=rw"`
	WMaxLimPct_SF      core.ScaleFactor `sunspec:"offset=21,len=1,access=r"`
	OutPFSet_SF        core.ScaleFactor `sunspec:"offset=22,len=1,access=r"`
	VArPct_SF          core.ScaleFactor `sunspec:"offset=23,len=1,access=r"`
}

func (self *Block123) GetId() core.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "controls",
		Length: 24,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 24,
				Type:   "fixed",
				Points: []smdx.PointElement{
					smdx.PointElement{Id: Conn_WinTms, Offset: 0, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: Conn_RvrtTms, Offset: 1, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: Conn, Offset: 2, Type: "enum16", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: WMaxLimPct, Offset: 3, Type: "uint16", ScaleFactor: "WMaxLimPct_SF", Units: "% WMax", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: WMaxLimPct_WinTms, Offset: 4, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: WMaxLimPct_RvrtTms, Offset: 5, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: WMaxLimPct_RmpTms, Offset: 6, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: WMaxLim_Ena, Offset: 7, Type: "enum16", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: OutPFSet, Offset: 8, Type: "int16", ScaleFactor: "OutPFSet_SF", Units: "cos()", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: OutPFSet_WinTms, Offset: 9, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: OutPFSet_RvrtTms, Offset: 10, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: OutPFSet_RmpTms, Offset: 11, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: OutPFSet_Ena, Offset: 12, Type: "enum16", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: VArWMaxPct, Offset: 13, Type: "int16", ScaleFactor: "VArPct_SF", Units: "% WMax", Access: "rw", Length: 1},
					smdx.PointElement{Id: VArMaxPct, Offset: 14, Type: "int16", ScaleFactor: "VArPct_SF", Units: "% VArMax", Access: "rw", Length: 1},
					smdx.PointElement{Id: VArAvalPct, Offset: 15, Type: "int16", ScaleFactor: "VArPct_SF", Units: "% VArAval", Access: "rw", Length: 1},
					smdx.PointElement{Id: VArPct_WinTms, Offset: 16, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: VArPct_RvrtTms, Offset: 17, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: VArPct_RmpTms, Offset: 18, Type: "uint16", Units: "Secs", Access: "rw", Length: 1},
					smdx.PointElement{Id: VArPct_Mod, Offset: 19, Type: "enum16", Access: "rw", Length: 1},
					smdx.PointElement{Id: VArPct_Ena, Offset: 20, Type: "enum16", Access: "rw", Length: 1, Mandatory: true},
					smdx.PointElement{Id: WMaxLimPct_SF, Offset: 21, Type: "sunssf", Access: "r", Length: 1, Mandatory: true},
					smdx.PointElement{Id: OutPFSet_SF, Offset: 22, Type: "sunssf", Access: "r", Length: 1, Mandatory: true},
					smdx.PointElement{Id: VArPct_SF, Offset: 23, Type: "sunssf", Access: "r", Length: 1},
				},
			},
		}})
}
