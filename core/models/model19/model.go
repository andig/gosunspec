// NOTICE
// This file was automatically generated by ../../../generators/core.go. Do not edit it!
// You can regenerate it by running 'go generate ./core' from the directory above.

package model19

import (
	"github.com/crabmusket/gosunspec/core"
	"github.com/crabmusket/gosunspec/smdx"
)

// Block19 - PPP Link - Include this model to configure a Point-to-Point Protocol link

const (
	ModelID = 19
)

const (
	Auth   = "Auth"
	Bits   = "Bits"
	Dup    = "Dup"
	Flw    = "Flw"
	Nam    = "Nam"
	Pad    = "Pad"
	Pty    = "Pty"
	Pw     = "Pw"
	Rte    = "Rte"
	UsrNam = "UsrNam"
)

type Block19 struct {
	Nam    core.String `sunspec:"offset=0,len=4,access=rw"`
	Rte    uint32      `sunspec:"offset=4,access=rw"`
	Bits   uint16      `sunspec:"offset=6,access=rw"`
	Pty    core.Enum16 `sunspec:"offset=7,access=rw"`
	Dup    core.Enum16 `sunspec:"offset=8,access=rw"`
	Flw    core.Enum16 `sunspec:"offset=9,access=rw"`
	Auth   core.Enum16 `sunspec:"offset=10"`
	UsrNam core.String `sunspec:"offset=11,len=12"`
	Pw     core.String `sunspec:"offset=23,len=6"`
	Pad    core.Pad    `sunspec:"offset=29"`
}

func (self *Block19) GetId() core.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "",
		Length: 30,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 30,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: Nam, Offset: 0, Type: "string", Access: "rw", Length: 4},
					smdx.PointElement{Id: Rte, Offset: 4, Type: "uint32", Units: "bps", Access: "rw", Mandatory: true},
					smdx.PointElement{Id: Bits, Offset: 6, Type: "uint16", Access: "rw", Mandatory: true},
					smdx.PointElement{Id: Pty, Offset: 7, Type: "enum16", Access: "rw", Mandatory: true},
					smdx.PointElement{Id: Dup, Offset: 8, Type: "enum16", Access: "rw"},
					smdx.PointElement{Id: Flw, Offset: 9, Type: "enum16", Access: "rw"},
					smdx.PointElement{Id: Auth, Offset: 10, Type: "enum16"},
					smdx.PointElement{Id: UsrNam, Offset: 11, Type: "string", Length: 12},
					smdx.PointElement{Id: Pw, Offset: 23, Type: "string", Length: 6},
					smdx.PointElement{Id: Pad, Offset: 29, Type: "pad"},
				},
			},
		}})
}
