package model304

// Code generated by ../../generators/models.go. DO NOT EDIT.
// You can regenerate it by running 'go generate ./models' from the directory above.

import (
	"github.com/andig/gosunspec"
	"github.com/andig/gosunspec/smdx"
	"github.com/andig/gosunspec/typelabel"
)

// Block304 - Inclinometer Model - Include to support orientation measurements

const (
	ModelID          = 304
	ModelLabel       = "Inclinometer Model"
	ModelDescription = "Include to support orientation measurements"
)

const (
	Inclx = "Inclx"
	Incly = "Incly"
	Inclz = "Inclz"
)

type Block304Repeat struct {
	Inclx int32 `sunspec:"offset=0,len=2,sf=-2,access=r"`
	Incly int32 `sunspec:"offset=2,len=2,sf=-2,access=r"`
	Inclz int32 `sunspec:"offset=4,len=2,sf=-2,access=r"`
}

type Block304 struct {
	Repeats []Block304Repeat
}

func (block *Block304) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "inclinometer",
		Length: 6,
		Blocks: []smdx.BlockElement{
			{Name: "incl",
				Length: 6,
				Type:   "repeating",
				Points: []smdx.PointElement{
					{Id: Inclx, Offset: 0, Type: typelabel.Int32, ScaleFactor: "-2", Units: "Degrees", Access: "r", Length: 2, Mandatory: true, Label: "X", Description: "X-Axis inclination"},
					{Id: Incly, Offset: 2, Type: typelabel.Int32, ScaleFactor: "-2", Units: "Degrees", Access: "r", Length: 2, Label: "Y", Description: "Y-Axis inclination"},
					{Id: Inclz, Offset: 4, Type: typelabel.Int32, ScaleFactor: "-2", Units: "Degrees", Access: "r", Length: 2, Label: "Z", Description: "Z-Axis inclination"},
				},
			},
		}})
}
