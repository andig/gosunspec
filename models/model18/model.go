// NOTICE
// This file was automatically generated by ../../../generators/core.go. Do not edit it!
// You can regenerate it by running 'go generate ./core' from the directory above.

package model18

import (
	"github.com/crabmusket/gosunspec/core"
	"github.com/crabmusket/gosunspec/core/typelabel"
	"github.com/crabmusket/gosunspec/smdx"
)

// Block18 - Cellular Link - Include this model to support a cellular interface link

const (
	ModelID = 18
)

const (
	APN  = "APN"
	IMEI = "IMEI"
	Nam  = "Nam"
	Num  = "Num"
	Pin  = "Pin"
)

type Block18 struct {
	Nam  string `sunspec:"offset=0,len=4,access=rw"`
	IMEI uint32 `sunspec:"offset=4,access=rw"`
	APN  string `sunspec:"offset=6,len=4,access=rw"`
	Num  string `sunspec:"offset=10,len=6,access=rw"`
	Pin  string `sunspec:"offset=16,len=6,access=rw"`
}

func (self *Block18) GetId() core.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "",
		Length: 22,
		Blocks: []smdx.BlockElement{
			smdx.BlockElement{
				Length: 22,

				Points: []smdx.PointElement{
					smdx.PointElement{Id: Nam, Offset: 0, Type: typelabel.String, Access: "rw", Length: 4},
					smdx.PointElement{Id: IMEI, Offset: 4, Type: typelabel.Uint32, Access: "rw"},
					smdx.PointElement{Id: APN, Offset: 6, Type: typelabel.String, Access: "rw", Length: 4},
					smdx.PointElement{Id: Num, Offset: 10, Type: typelabel.String, Access: "rw", Length: 6},
					smdx.PointElement{Id: Pin, Offset: 16, Type: typelabel.String, Access: "rw", Length: 6},
				},
			},
		}})
}
