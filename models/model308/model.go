package model308

// Code generated by ../../generators/models.go. DO NOT EDIT.
// You can regenerate it by running 'go generate ./models' from the directory above.

import (
	"github.com/andig/gosunspec"
	"github.com/andig/gosunspec/smdx"
	"github.com/andig/gosunspec/typelabel"
)

// Block308 - Mini Met Model - Include to support a few basic measurements

const (
	ModelID          = 308
	ModelLabel       = "Mini Met Model"
	ModelDescription = "Include to support a few basic measurements"
)

const (
	GHI    = "GHI"
	TmpAmb = "TmpAmb"
	TmpBOM = "TmpBOM"
	WndSpd = "WndSpd"
)

type Block308 struct {
	GHI    uint16 `sunspec:"offset=0,len=1,access=r"`
	TmpBOM int16  `sunspec:"offset=1,len=1,sf=-1,access=r"`
	TmpAmb int16  `sunspec:"offset=2,len=1,sf=-1,access=r"`
	WndSpd uint16 `sunspec:"offset=3,len=1,access=r"`
}

func (block *Block308) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "mini_met",
		Length: 4,
		Blocks: []smdx.BlockElement{
			{
				Length: 4,
				Points: []smdx.PointElement{
					{Id: GHI, Offset: 0, Type: typelabel.Uint16, Units: "W/m2", Access: "r", Length: 1, Label: "GHI", Description: "Global Horizontal Irradiance"},
					{Id: TmpBOM, Offset: 1, Type: typelabel.Int16, ScaleFactor: "-1", Units: "C", Access: "r", Length: 1, Label: "Temp", Description: "Back of module temperature measurement"},
					{Id: TmpAmb, Offset: 2, Type: typelabel.Int16, ScaleFactor: "-1", Units: "C", Access: "r", Length: 1, Label: "Ambient Temperature", Description: ""},
					{Id: WndSpd, Offset: 3, Type: typelabel.Uint16, Units: "m/s", Access: "r", Length: 1, Label: "Wind Speed", Description: ""},
				},
			},
		}})
}
