package model712

// Code generated by ../../generators/models.go. DO NOT EDIT.
// You can regenerate it by running 'go generate ./models' from the directory above.

import (
	"github.com/andig/gosunspec"
	"github.com/andig/gosunspec/smdx"
	"github.com/andig/gosunspec/typelabel"
)

// Block712 - DER Watt-Var - DER Watt-Var model.

const (
	ModelID          = 712
	ModelLabel       = "DER Watt-Var"
	ModelDescription = "DER Watt-Var model."
)

const (
	ActPt       = "ActPt"
	AdptCrvReq  = "AdptCrvReq"
	AdptCrvRslt = "AdptCrvRslt"
	DeptRef     = "DeptRef"
	DeptRef_SF  = "DeptRef_SF"
	Ena         = "Ena"
	NCrv        = "NCrv"
	NPt         = "NPt"
	Pri         = "Pri"
	ReadOnly    = "ReadOnly"
	RvrtCrv     = "RvrtCrv"
	RvrtRem     = "RvrtRem"
	RvrtTms     = "RvrtTms"
	W_SF        = "W_SF"
)

type Block712Repeat struct {
	ActPt    uint16         `sunspec:"offset=0,len=1,access=rw"`
	DeptRef  sunspec.Enum16 `sunspec:"offset=1,len=1,access=rw"`
	Pri      sunspec.Enum16 `sunspec:"offset=2,len=1,access=r"`
	ReadOnly sunspec.Enum16 `sunspec:"offset=3,len=1,access=rw"`
}

type Block712 struct {
	Ena         sunspec.Enum16      `sunspec:"offset=0,len=1,access=rw"`
	AdptCrvReq  uint16              `sunspec:"offset=1,len=1,access=rw"`
	AdptCrvRslt sunspec.Enum16      `sunspec:"offset=2,len=1,access=r"`
	NPt         uint16              `sunspec:"offset=3,len=1,access=r"`
	NCrv        uint16              `sunspec:"offset=4,len=1,access=r"`
	RvrtTms     uint32              `sunspec:"offset=5,len=2,access=rw"`
	RvrtRem     uint32              `sunspec:"offset=7,len=2,access=r"`
	RvrtCrv     uint16              `sunspec:"offset=9,len=1,access=rw"`
	W_SF        sunspec.ScaleFactor `sunspec:"offset=10,len=1,access=r"`
	DeptRef_SF  sunspec.ScaleFactor `sunspec:"offset=11,len=1,access=r"`

	Repeats []Block712Repeat
}

func (block *Block712) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "DERWattVar",
		Length: 16,
		Blocks: []smdx.BlockElement{
			{
				Length: 12,
				Points: []smdx.PointElement{
					{Id: Ena, Offset: 0, Type: typelabel.Enum16, Access: "rw", Length: 1, Mandatory: true, Label: "Module Enable", Description: "Watt-Var control enable."},
					{Id: AdptCrvReq, Offset: 1, Type: typelabel.Uint16, Access: "rw", Length: 1, Mandatory: true, Label: "Set Active Curve Request", Description: "Set active curve. 0 = No active curve"},
					{Id: AdptCrvRslt, Offset: 2, Type: typelabel.Enum16, Access: "r", Length: 1, Mandatory: true, Label: "Set Active Curve Result", Description: "Result of last set active curve operation."},
					{Id: NPt, Offset: 3, Type: typelabel.Uint16, Access: "r", Length: 1, Mandatory: true, Label: "Number Of Points", Description: "Number of curve points supported."},
					{Id: NCrv, Offset: 4, Type: typelabel.Uint16, Access: "r", Length: 1, Mandatory: true, Label: "Stored Curve Count", Description: "Number of stored curves supported."},
					{Id: RvrtTms, Offset: 5, Type: typelabel.Uint32, Access: "rw", Length: 2, Label: "Reversion Timeout", Description: "Reversion time in seconds.  0 = No reversion time"},
					{Id: RvrtRem, Offset: 7, Type: typelabel.Uint32, Access: "r", Length: 2, Label: "Reversion Time Left", Description: "Reversion time remaining in seconds"},
					{Id: RvrtCrv, Offset: 9, Type: typelabel.Uint16, Access: "rw", Length: 1, Label: "Reversion Curve", Description: "Default curve after reversion timeout."},
					{Id: W_SF, Offset: 10, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "Active Power Scale Factor", Description: "Scale factor for curve active power points."},
					{Id: DeptRef_SF, Offset: 11, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Mandatory: true, Label: "Var Scale Factor", Description: "Scale factor for curve var points."},
				},
			},
			{Name: "Crv",
				Length: 4,
				Type:   "repeating",
				Points: []smdx.PointElement{
					{Id: ActPt, Offset: 0, Type: typelabel.Uint16, Access: "rw", Length: 1, Mandatory: true, Label: "Active Points", Description: "Number of active points."},
					{Id: DeptRef, Offset: 1, Type: typelabel.Enum16, Access: "rw", Length: 1, Mandatory: true, Label: "Dependent Reference", Description: "Curve dependent reference."},
					{Id: Pri, Offset: 2, Type: typelabel.Enum16, Access: "r", Length: 1},
					{Id: ReadOnly, Offset: 3, Type: typelabel.Enum16, Access: "rw", Length: 1, Label: "Curve Access", Description: "Curve read-write access."},
				},
			},
		}})
}
