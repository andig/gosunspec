package model302

// Code generated by ../../generators/models.go. DO NOT EDIT.
// You can regenerate it by running 'go generate ./models' from the directory above.

import (
	"github.com/andig/gosunspec"
	"github.com/andig/gosunspec/smdx"
	"github.com/andig/gosunspec/typelabel"
)

// Block302 - Irradiance Model - Include to support various irradiance measurements

const (
	ModelID          = 302
	ModelLabel       = "Irradiance Model"
	ModelDescription = "Include to support various irradiance measurements"
)

const (
	DFI  = "DFI"
	DNI  = "DNI"
	GHI  = "GHI"
	OTI  = "OTI"
	POAI = "POAI"
)

type Block302Repeat struct {
	GHI  uint16 `sunspec:"offset=0,len=1,access=r"`
	POAI uint16 `sunspec:"offset=1,len=1,access=r"`
	DFI  uint16 `sunspec:"offset=2,len=1,access=r"`
	DNI  uint16 `sunspec:"offset=3,len=1,access=r"`
	OTI  uint16 `sunspec:"offset=4,len=1,access=r"`
}

type Block302 struct {
	Repeats []Block302Repeat
}

func (block *Block302) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "irradiance",
		Length: 5,
		Blocks: []smdx.BlockElement{
			{Name: "repeating",
				Length: 5,
				Type:   "repeating",
				Points: []smdx.PointElement{
					{Id: GHI, Offset: 0, Type: typelabel.Uint16, Units: "W/m2", Access: "r", Length: 1, Label: "GHI", Description: "Global Horizontal Irradiance"},
					{Id: POAI, Offset: 1, Type: typelabel.Uint16, Units: "W/m2", Access: "r", Length: 1, Label: "POAI", Description: "Plane-of-Array Irradiance"},
					{Id: DFI, Offset: 2, Type: typelabel.Uint16, Units: "W/m2", Access: "r", Length: 1, Label: "DFI", Description: "Diffuse Irradiance"},
					{Id: DNI, Offset: 3, Type: typelabel.Uint16, Units: "W/m2", Access: "r", Length: 1, Label: "DNI", Description: "Direct Normal Irradiance"},
					{Id: OTI, Offset: 4, Type: typelabel.Uint16, Units: "W/m2", Access: "r", Length: 1, Label: "OTI", Description: "Other Irradiance"},
				},
			},
		}})
}
