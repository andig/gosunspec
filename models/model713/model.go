package model713

// Code generated by ../../generators/models.go. DO NOT EDIT.
// You can regenerate it by running 'go generate ./models' from the directory above.

import (
	"github.com/andig/gosunspec"
	"github.com/andig/gosunspec/smdx"
	"github.com/andig/gosunspec/typelabel"
)

// Block713 - DER DC Measurement - DER DC measurement.

const (
	ModelID          = 713
	ModelLabel       = "DER DC Measurement"
	ModelDescription = "DER DC measurement."
)

const (
	DCA      = "DCA"
	DCA_SF   = "DCA_SF"
	DCAlrm   = "DCAlrm"
	DCSt     = "DCSt"
	DCV      = "DCV"
	DCV_SF   = "DCV_SF"
	DCW      = "DCW"
	DCWH_SF  = "DCWH_SF"
	DCW_SF   = "DCW_SF"
	DCWhAbs  = "DCWhAbs"
	DCWhInj  = "DCWhInj"
	ID       = "ID"
	IDStr    = "IDStr"
	NPrt     = "NPrt"
	PrtAlrms = "PrtAlrms"
	PrtTyp   = "PrtTyp"
	Tmp      = "Tmp"
	Tmp_SF   = "Tmp_SF"
)

type Block713Repeat struct {
	PrtTyp  sunspec.Enum16     `sunspec:"offset=0,len=1,access=r"`
	ID      uint16             `sunspec:"offset=1,len=1,access=r"`
	IDStr   string             `sunspec:"offset=2,len=8,access=r"`
	DCA     int16              `sunspec:"offset=10,len=1,sf=DCA_SF,access=r"`
	DCV     uint16             `sunspec:"offset=11,len=1,sf=DCV_SF,access=r"`
	DCW     int16              `sunspec:"offset=12,len=1,sf=DCW_SF,access=r"`
	DCWhInj uint64             `sunspec:"offset=13,len=4,sf=DCWH_SF,access=r"`
	DCWhAbs uint64             `sunspec:"offset=17,len=4,sf=DCWH_SF,access=r"`
	Tmp     int16              `sunspec:"offset=21,len=1,access=r"`
	DCSt    sunspec.Enum16     `sunspec:"offset=22,len=1,access=r"`
	DCAlrm  sunspec.Bitfield32 `sunspec:"offset=23,len=2,access=r"`
}

type Block713 struct {
	PrtAlrms sunspec.Bitfield32  `sunspec:"offset=0,len=2,access=r"`
	NPrt     uint16              `sunspec:"offset=2,len=1,access=r"`
	DCA      int16               `sunspec:"offset=3,len=1,sf=DCA_SF,access=r"`
	DCW      int16               `sunspec:"offset=4,len=1,sf=DCW_SF,access=r"`
	DCWhInj  uint64              `sunspec:"offset=5,len=4,sf=DCWH_SF,access=r"`
	DCWhAbs  uint64              `sunspec:"offset=9,len=4,sf=DCWH_SF,access=r"`
	DCA_SF   sunspec.ScaleFactor `sunspec:"offset=13,len=1,access=r"`
	DCV_SF   sunspec.ScaleFactor `sunspec:"offset=14,len=1,access=r"`
	DCW_SF   sunspec.ScaleFactor `sunspec:"offset=15,len=1,access=r"`
	DCWH_SF  sunspec.ScaleFactor `sunspec:"offset=16,len=1,access=r"`
	Tmp_SF   sunspec.ScaleFactor `sunspec:"offset=17,len=1,access=r"`

	Repeats []Block713Repeat
}

func (block *Block713) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "DERMeasureDC",
		Length: 43,
		Blocks: []smdx.BlockElement{
			{
				Length: 18,
				Points: []smdx.PointElement{
					{Id: PrtAlrms, Offset: 0, Type: typelabel.Bitfield32, Access: "r", Length: 2, Label: "Port Alarms", Description: "Bitfield of ports with active alarms. Bit is 1 if port has an active alarm. Bit 0 is first port."},
					{Id: NPrt, Offset: 2, Type: typelabel.Uint16, Access: "r", Length: 1, Label: "Number Of Ports", Description: "Number of DC ports."},
					{Id: DCA, Offset: 3, Type: typelabel.Int16, ScaleFactor: "DCA_SF", Access: "r", Length: 1, Label: "DC Current", Description: "Total DC current for all ports."},
					{Id: DCW, Offset: 4, Type: typelabel.Int16, ScaleFactor: "DCW_SF", Access: "r", Length: 1, Label: "DC Power", Description: "Total DC power for all ports."},
					{Id: DCWhInj, Offset: 5, Type: typelabel.Uint64, ScaleFactor: "DCWH_SF", Access: "r", Length: 4, Label: "DC Energy Injected", Description: "Total cumulative DC energy injected for all ports."},
					{Id: DCWhAbs, Offset: 9, Type: typelabel.Uint64, ScaleFactor: "DCWH_SF", Access: "r", Length: 4, Label: "DC Energy Absorbed", Description: "Total cumulative DC energy absorbed for all ports."},
					{Id: DCA_SF, Offset: 13, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "DC Current Scale Factor", Description: "DC current scale factor."},
					{Id: DCV_SF, Offset: 14, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "DC Voltage Scale Factor", Description: "DC voltage scale factor."},
					{Id: DCW_SF, Offset: 15, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "DC Power Scale Factor", Description: "DC power scale factor."},
					{Id: DCWH_SF, Offset: 16, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "DC Energy Scale Factor", Description: "DC energy scale factor."},
					{Id: Tmp_SF, Offset: 17, Type: typelabel.ScaleFactor, Access: "r", Length: 1, Label: "Temperature Scale Factor", Description: "Temperature Scale Factor."},
				},
			},
			{Name: "Prt",
				Length: 25,
				Type:   "repeating",
				Points: []smdx.PointElement{
					{Id: PrtTyp, Offset: 0, Type: typelabel.Enum16, Access: "r", Length: 1, Label: "Port Type", Description: "Port type."},
					{Id: ID, Offset: 1, Type: typelabel.Uint16, Access: "r", Length: 1, Label: "Port ID", Description: "Port ID."},
					{Id: IDStr, Offset: 2, Type: typelabel.String, Access: "r", Length: 8, Label: "Port ID String", Description: "Port ID string."},
					{Id: DCA, Offset: 10, Type: typelabel.Int16, ScaleFactor: "DCA_SF", Access: "r", Length: 1, Label: "DC Current", Description: "DC current for the port."},
					{Id: DCV, Offset: 11, Type: typelabel.Uint16, ScaleFactor: "DCV_SF", Access: "r", Length: 1, Label: "DC Voltage", Description: "DC voltage for the port."},
					{Id: DCW, Offset: 12, Type: typelabel.Int16, ScaleFactor: "DCW_SF", Access: "r", Length: 1, Label: "DC Power", Description: "DC power for the port."},
					{Id: DCWhInj, Offset: 13, Type: typelabel.Uint64, ScaleFactor: "DCWH_SF", Access: "r", Length: 4, Label: "DC Energy Injected", Description: "Total cumulative DC energy injected for the port."},
					{Id: DCWhAbs, Offset: 17, Type: typelabel.Uint64, ScaleFactor: "DCWH_SF", Access: "r", Length: 4, Label: "DC Energy Absorbed", Description: "Total cumulative DC energy absorbed for the port."},
					{Id: Tmp, Offset: 21, Type: typelabel.Int16, Access: "r", Length: 1, Label: "DC Port Temperature", Description: "DC port temperature."},
					{Id: DCSt, Offset: 22, Type: typelabel.Enum16, Access: "r", Length: 1, Label: "DC Port Status", Description: "DC port status."},
					{Id: DCAlrm, Offset: 23, Type: typelabel.Bitfield32, Access: "r", Length: 2, Label: "DC Port Alarm", Description: "DC port alarm."},
				},
			},
		}})
}
